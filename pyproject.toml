# WARNING: The presence of this pyproject.toml file will make 'pip install'
# use it. However, on older systems such as Ubuntu 22.04, the system version
# of pip won't cope, and will fail fairly cryptically.
# It requires at least version 23 of pip.
#
# If you run into this problem, you should upgrade your pip with something
# like the following:
#    pip install --user -U pip
# After that, you should be OK to install RIOS using pip, as normal.
#

# Notes
# Currently we allow setuptools to "discover" the package directories,
# but we could specify them if required, with [tool.setuptools]/packages=

# The old setup.py currently has scripts=glob("bin/*.py"). When (or if)
# we remove setup.py, we should also remove bin/, because the new
# approach is via projects.scripts, which installs without the .py suffix

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rios"
dynamic = ["version"]
authors = [
  {name = "Sam Gillingham"},
  {name = "Neil Flood"}
]
description = "Raster Input/Output Simplification"
readme = "README.md"
license = {file = "LICENSE.txt"}

[project.optional-dependencies]
# For those computeWorkerKinds which run across multiple machines
multimachine = ["cloudpickle"]

[project.scripts]
testrios = "rios.riostests.riostestutils:testAll"
rioscalcstats = "rios.cmdline.rioscalcstats:main"
riosprintstats = "rios.cmdline.riosprintstats:main"
rios_computeworker = "rios.cmdline.rios_computeworker:mainCmd"

[project.urls]
Repository = "https://github.com/ubarsc/rios.git"
Homepage = "https://www.rioshome.org"

[tool.setuptools.dynamic]
version = {attr = "rios.__version__"}
